<svg xmlns="http://www.w3.org/2000/svg" width="70em" height="8em" version="1.1"><defs><style type="text/css">svg{font-family:&quot;Helvetica Neue&quot;,Arial,sans-serif}tspan.size{font-size:.8em}tspan.head{font-weight:700}</style></defs><text x="0em" y="1.2em" class="head"><tspan class="size">To what extent do you agree or disagree with the following statements:</tspan></text><text x="0em" y="2.4em"><tspan class="size">(<tspan fill="#CE3262">strongly disagree</tspan>, <tspan fill="#D77A95">disagree</tspan>, <tspan fill="#E6B1C1">somewhat disagree</tspan>, <tspan fill="#ccc">neither agree nor disagree</tspan>, <tspan fill="#77CCE9">somewhat agree</tspan>, <tspan fill="#50BFE2">agree</tspan>, <tspan fill="#00ACD7">strongly agree</tspan>)</tspan></text><rect width=".08em" height=".6em" x="14em" y="3.3em" fill="#CE3262" stroke="#CE3262"/><rect width=".21em" height=".6em" x="14.08em" y="3.3em" fill="#D77A95" stroke="#D77A95"/><rect width=".55em" height=".6em" x="14.29em" y="3.3em" fill="#E6B1C1" stroke="#E6B1C1"/><rect width=".62em" height=".6em" x="14.84em" y="3.3em" fill="#ccc" stroke="#ccc"/><rect width="2.13em" height=".6em" x="15.46em" y="3.3em" fill="#77CCE9" stroke="#77CCE9"/><rect width="3.71em" height=".6em" x="17.59em" y="3.3em" fill="#50BFE2" stroke="#50BFE2"/><rect width="1.45em" height=".6em" x="21.3em" y="3.3em" fill="#00ACD7" stroke="#00ACD7"/><text x="13.5em" y="3.9em" text-anchor="end"><tspan class="size">5,446 (<tspan fill="#CE3262">0.8</tspan>, <tspan fill="#D77A95">2</tspan>, <tspan fill="#E6B1C1">6</tspan>, <tspan fill="#ccc">6</tspan>, <tspan fill="#77CCE9">21</tspan>, <tspan fill="#50BFE2">37</tspan>, <tspan fill="#00ACD7">14</tspan>%)</tspan></text><text x="23.25em" y="3.9em"><tspan class="size">I am able to effectively diagnose bugs in my Go programs (8.7:1) [12:1]</tspan></text><rect width=".07em" height=".6em" x="14em" y="4.5em" fill="#CE3262" stroke="#CE3262"/><rect width=".22em" height=".6em" x="14.07em" y="4.5em" fill="#D77A95" stroke="#D77A95"/><rect width=".58em" height=".6em" x="14.29em" y="4.5em" fill="#E6B1C1" stroke="#E6B1C1"/><rect width="1.25em" height=".6em" x="14.87em" y="4.5em" fill="#ccc" stroke="#ccc"/><rect width="2.2em" height=".6em" x="16.12em" y="4.5em" fill="#77CCE9" stroke="#77CCE9"/><rect width="2.72em" height=".6em" x="18.33em" y="4.5em" fill="#50BFE2" stroke="#50BFE2"/><rect width=".93em" height=".6em" x="21.05em" y="4.5em" fill="#00ACD7" stroke="#00ACD7"/><text x="13.5em" y="5.1em" text-anchor="end"><tspan class="size">4,968 (<tspan fill="#CE3262">0.7</tspan>, <tspan fill="#D77A95">2</tspan>, <tspan fill="#E6B1C1">6</tspan>, <tspan fill="#ccc">13</tspan>, <tspan fill="#77CCE9">22</tspan>, <tspan fill="#50BFE2">27</tspan>, <tspan fill="#00ACD7">9</tspan>%)</tspan></text><text x="22.48em" y="5.1em"><tspan class="size">I am able to effectively diagnose performance issues in Go programs (6.7:1) [8.7:1]</tspan></text><rect width=".07em" height=".6em" x="14em" y="5.7em" fill="#CE3262" stroke="#CE3262"/><rect width=".15em" height=".6em" x="14.07em" y="5.7em" fill="#D77A95" stroke="#D77A95"/><rect width=".3em" height=".6em" x="14.22em" y="5.7em" fill="#E6B1C1" stroke="#E6B1C1"/><rect width=".61em" height=".6em" x="14.52em" y="5.7em" fill="#ccc" stroke="#ccc"/><rect width="1.55em" height=".6em" x="15.13em" y="5.7em" fill="#77CCE9" stroke="#77CCE9"/><rect width="3.5em" height=".6em" x="16.68em" y="5.7em" fill="#50BFE2" stroke="#50BFE2"/><rect width="2.36em" height=".6em" x="20.18em" y="5.7em" fill="#00ACD7" stroke="#00ACD7"/><text x="13.5em" y="6.3em" text-anchor="end"><tspan class="size">5,319 (<tspan fill="#CE3262">0.7</tspan>, <tspan fill="#D77A95">2</tspan>, <tspan fill="#E6B1C1">3</tspan>, <tspan fill="#ccc">6</tspan>, <tspan fill="#77CCE9">16</tspan>, <tspan fill="#50BFE2">35</tspan>, <tspan fill="#00ACD7">24</tspan>%)</tspan></text><text x="23.04em" y="6.3em"><tspan class="size">I am able to effectively use Go’s concurrency features (goroutines, channels, select) (14:1) [21:1]</tspan></text><rect width=".17em" height=".6em" x="14em" y="6.9em" fill="#CE3262" stroke="#CE3262"/><rect width=".46em" height=".6em" x="14.17em" y="6.9em" fill="#D77A95" stroke="#D77A95"/><rect width=".82em" height=".6em" x="14.63em" y="6.9em" fill="#E6B1C1" stroke="#E6B1C1"/><rect width="1.49em" height=".6em" x="15.45em" y="6.9em" fill="#ccc" stroke="#ccc"/><rect width="2.45em" height=".6em" x="16.94em" y="6.9em" fill="#77CCE9" stroke="#77CCE9"/><rect width="2.13em" height=".6em" x="19.39em" y="6.9em" fill="#50BFE2" stroke="#50BFE2"/><rect width=".67em" height=".6em" x="21.52em" y="6.9em" fill="#00ACD7" stroke="#00ACD7"/><text x="13.5em" y="7.5em" text-anchor="end"><tspan class="size">5,096 (<tspan fill="#CE3262">2</tspan>, <tspan fill="#D77A95">5</tspan>, <tspan fill="#E6B1C1">8</tspan>, <tspan fill="#ccc">15</tspan>, <tspan fill="#77CCE9">24</tspan>, <tspan fill="#50BFE2">21</tspan>, <tspan fill="#00ACD7">7</tspan>%)</tspan></text><text x="22.69em" y="7.5em"><tspan class="size">I am able to effectively debug uses of Go’s concurrency features (goroutines, channels, select) (3.6:1) [3.9:1]</tspan></text></svg>